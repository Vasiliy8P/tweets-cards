{"version":3,"file":"static/js/530.3a813e99.chunk.js","mappings":"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","sources":["services/api.js","components/TweetsCard/TweetsCard.jsx","components/Loader/Loader.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://640d0e31b07afc3b0da6e662.mockapi.io\";\n\nexport const getTweetsApi = async (page) => {\n    const response = await axios.get(`/tweets?page=${page}&limit=3`);\n    return response.data;\n};\n\nexport const getIncrementFollowersApi = async (tweetId, tweetFollowers) => {\n    const response = await axios.put(`/tweets/${tweetId}`, { followers: tweetFollowers + 1 });\n    return response.data;\n};\n\nexport const getDecrementFollowersApi = async (tweetId, tweetFollowers) => {\n    const response = await axios.put(`/tweets/${tweetId}`, { followers: tweetFollowers - 1 });\n    return response.data;\n};","import pictureImg from '../img/picture.png';\nimport logoImg from '../img/Logo.png';\nimport rectangleImg from '../img/rectangle.png';\nimport ellipseImg from '../img/ellipse.png';\nimport './TweetsCard.css';\n\nconst TweetsCard = ({\n    tweet: { tweets, followers, id, avatar },\n    followingTweetsId,\n    onClickFollowing\n}) => {\n    return (\n        <div className=\"TweetCard\">\n            <img className=\"TweetCard__picture\" src={pictureImg} alt=\"background-img\" />\n            <img className=\"TweetCard__logo\" src={logoImg} alt=\"logo\" />\n            <img className=\"TweetCard__rectangle\" src={rectangleImg} alt=\"rectangle\" />\n            <img className=\"TweetCard__user-photo\" src={avatar} alt=\"user\" />\n            <img className=\"TweetCard__ellipse\" src={ellipseImg} alt=\"ellipse\" />\n            <p className=\"TweetCard__tweets-counter\"> {tweets} tweets</p>\n            <p className=\"TweetCard__followers-counter\"> {followers.toLocaleString('en-US')} followers</p>\n            <button\n                className={\n                    followingTweetsId.includes(id)\n                        ? \"TweetCard__btn-following\"\n                        : \"TweetCard__btn-follow\"}\n                type=\"button\"\n                onClick={() => onClickFollowing(id, followers)}\n            >\n                {followingTweetsId.includes(id) ? \"following\" : \"Follow\"}\n            </button>\n        </div>\n    )\n};\nexport default TweetsCard;\n\n","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n    return (\n        <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"#4B2A99\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{display: \"flex\", justifyContent: \"center\"}}\n            visible={true}\n        />\n    )\n}\n\nexport default Loader;","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport 'bootstrap/js/dist/dropdown';\nimport { getDecrementFollowersApi, getIncrementFollowersApi, getTweetsApi } from 'services/api';\nimport TweetsCard from 'components/TweetsCard/TweetsCard';\nimport Loader from 'components/Loader/Loader';\nimport './Tweets.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst initialFollowingTweetsId = () => {\n    const saveFollowingTweetsId = localStorage.getItem(\"followingTweets\");\n    if (saveFollowingTweetsId !== null) {\n        const parsedFollowingTweetsId = JSON.parse(saveFollowingTweetsId);\n        return parsedFollowingTweetsId\n    }\n    return [];\n}\n\nconst Tweets = () => {\n    const [tweets, setTweets] = useState([]);\n    const [page, setPage] = useState(1);\n    const [followingTweetsId, setFollowingTweetsId] = useState(initialFollowingTweetsId());   \n    const [isLoading, setIsLoading] = useState(null);\n    const [filterTweets, setFilterTweets] = useState([]);\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n    \n    useEffect(() => {\n        setIsLoading(true);\n        getTweetsApi(page)\n            .then(fetchTweets => {\n                setTweets(prevTweets => [...prevTweets, ...fetchTweets])\n                setFilterTweets(prevTweets => [...prevTweets, ...fetchTweets])\n                setIsLoading(false);\n            })\n            .catch(error => console.log(error.message));\n    }, [page]);\n\n    useEffect(() => {\n        localStorage.setItem(\"followingTweets\", JSON.stringify(followingTweetsId));\n    }, [followingTweetsId]);\n\n    const incrementFollowers = (tweetId, tweetFollowers) => {\n        getIncrementFollowersApi(tweetId, tweetFollowers)\n            .then(fetchTweet => {\n                setTweets(prevTweets => prevTweets.map(prevTweet => {\n                    if (prevTweet.id === fetchTweet.id) {\n                        prevTweet.followers = fetchTweet.followers;\n                    };\n                    return prevTweet\n                }))\n            })\n            .catch(error => console.log(error.message));\n    };\n\n    const decrementFollowers = (tweetId, tweetFollowers) => {\n        getDecrementFollowersApi(tweetId, tweetFollowers)\n            .then(fetchTweet => {\n                setTweets(prevTweets => prevTweets.map(prevTweet => {\n                    if (prevTweet.id === fetchTweet.id) {\n                        prevTweet.followers = fetchTweet.followers;\n                    };\n                    return prevTweet;\n                }));\n            })\n            .catch(error => console.log(error.message));\n    };\n\n    const hendleClickFollowing = (tweetId, followers) => {\n        if (!followingTweetsId.includes(tweetId)) {\n            setFollowingTweetsId(prevState => [...prevState, tweetId]);\n            incrementFollowers(tweetId, followers);\n            return\n        } else {\n            setFollowingTweetsId(prevState => [...prevState.filter(prevState => prevState !== tweetId)]);\n            decrementFollowers(tweetId, followers);\n        }\n    }\n\n    const hendleClickBtnLoadMore = () => {\n        setPage(prevState => (prevState + 1));\n    };\n\n    const getFilterTweets = (selectedFilter) => {\n        if (selectedFilter === \"All\") {\n            setFilterTweets(tweets);\n        } else if (selectedFilter === \"Follow\") {\n            setFilterTweets(tweets.filter(tweet => !followingTweetsId.includes(tweet.id)));\n        } else if (selectedFilter === \"Followings\") {\n            setFilterTweets(tweets.filter(tweet => followingTweetsId.includes(tweet.id)));\n        }\n    };\n\n    return (\n        <>\n            <div className='Btn-wrapper'>\n                <Link to={backLinkHref} className='Tweets-list__btn-back-link'>\n                    <button className='Tweets-list__btn-back' type='button'>\n                        Back\n                    </button>\n                </Link>\n                <div className=\"dropdown\">\n                    <button className=\"btn btn-secondary dropdown-toggle dropdown-btn\" type=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                        Show\n                    </button>\n                    <ul className=\"dropdown-menu dropdown-menu-end\">\n                        <li><button className=\"dropdown-item\" type=\"button\" onClick={() => getFilterTweets(\"All\")}>all</button></li>\n                        <li><button className=\"dropdown-item\" type=\"button\" onClick={() => getFilterTweets(\"Follow\")}>follow</button></li>\n                        <li><button className=\"dropdown-item\" type=\"button\" onClick={() => getFilterTweets(\"Followings\")}>followings</button></li>\n                    </ul>\n                </div>\n            </div>\n            <ul className='Tweets-list'>\n                {(filterTweets.map(tweet => (\n                    <li key={nanoid()} className='Tweets-list__item'>\n                        <TweetsCard\n                            tweet={tweet}\n                            onClickFollowing={hendleClickFollowing}\n                            followingTweetsId={followingTweetsId}\n                        />\n                    </li>\n                )))}\n            </ul>\n            {isLoading && <Loader />}\n            {(filterTweets.length > 0) && !isLoading &&\n                <button\n                    className='Tweets-list__btn-LoadMore'\n                    type='button'\n                    onClick={hendleClickBtnLoadMore}\n                >\n                    Load more\n                </button>\n            }\n        </>\n    )\n};\n\nexport default Tweets;"],"names":["axios","getTweetsApi","page","response","data","getIncrementFollowersApi","tweetId","tweetFollowers","followers","getDecrementFollowersApi","tweet","tweets","id","avatar","followingTweetsId","onClickFollowing","className","src","pictureImg","alt","ellipseImg","toLocaleString","includes","type","onClick","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","visible","useState","setTweets","setPage","saveFollowingTweetsId","localStorage","getItem","JSON","parse","initialFollowingTweetsId","setFollowingTweetsId","isLoading","setIsLoading","filterTweets","setFilterTweets","backLinkHref","useLocation","state","from","useEffect","then","fetchTweets","prevTweets","catch","error","console","log","message","setItem","stringify","hendleClickFollowing","prevState","fetchTweet","map","prevTweet","incrementFollowers","filter","decrementFollowers","getFilterTweets","selectedFilter","to","nanoid","length"],"sourceRoot":""}